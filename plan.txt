Jeżeli będziemy chcieli robić diagramy, to Dia wydaje mi się fajnym, prostym programem.

[pakiet]
 - [klasa]
	:[składowa]

Lobby

Model
 - Card
	:abstract selectionType
 	:abstract isSelectionCorrect(Selection)
 	:abstract makeEffect(Selection, GameState)
 - Stack
 - Hand
 - Board
 - GameState

View
 - Hand
 - Board
 - abstract Selector
	:HandCardClicked
	:BoardCardClicked
 - CellSelector
 - ColumnSelector
 - GroupSelector
 - HandSelector
 - GUI
	:setToAdvancingState()
	:setToCardDiscardingState()
	:setToCardChoosingState()
	:setToCardPlayingState(Selector)

Controller
 - abstract Selection
 - CellSelection
 - ColumnSelection
 - GroupSelection
 - HandSelection
 - Controller
 	:advanceStage()
	:drawStage()
	:discardStage()
	:playStage()
	:game()

1. Beda sobie dwa watki (GUI i kontroli gry), Controller wywoluje funkcje odpowiadające za kolejne fazy gry,
jezeli cos potrzebuje jakiejs informacji od gracza to rejestruje sie w GUI i zasypia.

2. Takich np. Selectorow jest duzo, nie slyszalem w javie o subpakietach,
zostawiamy wiele klas, czy tworzymy klase Selectors, i Selectory bedace jej statycznymi podklasami?

3. Selekcje: karta mowi czego porzebuje (pojedynczej karty, kolumny, ...),
selector pozwala na wybieranie, po kazdej modyfiykacji wyboru wywoluje sprawdzenie poprawnosci selekcji
(mysle ze poprawnie zalozylem ze podzbior poprawnego wyboru jest zawsze poprawny)
