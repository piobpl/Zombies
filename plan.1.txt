<wstepniak bronek>

Trap:
 - car
 - pit
 - mine
 - wall
 - barrier (efekt dzialania zapory)

Modifier:
 - human
 - movedOnce
 - beenFrozen

GlobalModifier:
 - terror
	
Kazdy modifier ma czas (getTime, decreaseTime)
oznaczajacy przez ile faz modyfikator bedzie dzialal.
Konstruktor modyfikatora dostaje czas.
Tura trwa 8 faz. (ruch zombie, dociag zombie, odrzucenie zombie, zagranie zombie, ... human)
Jezeli podczas zagrywania zombie dorzucimy modyfikator z czasem 1,
to zniknie on PRZED kolejna faza (ruch human). Czas ma specjalna wartosc -1,
oznaczajaca niesmiertelnosc (nie powinno sie zmieniac mimo decreaseTime)

Controller redukuje czas i usuwa stare modyfikatory i trapy.

Kazda karta trzyma swoj zbior modyfikatorow.
Board trzyma zbior trapow na kazdej pozycji.
GameState trzyma zbior globalnych modyfikatorow.

Trapy wiedza gdzie sa, i znaja gameState, maja metode isMovePossible(Card c, PII from),
ktora zwraca false, gdy ruch jest niemozliwy, w przeciwnym przypadku zwracaja true.
Oraz maja metode void movedOn(Card c), ktora modyfikuje gameState po czyims najsciu.
Oraz maja metode void shot(), ktora modyfikuje gameState po detonacji strzalem.
Klasa Mover triggeruje funkcje dotyczace ruchu.
Shot moze byc trigerowany przez cokolwiek (proponuje DamageDealer do ogarniania zadawania dmg).

Modyfikatory nie maja juz wiecej innych metod.

Karty nadal pozostawione na pozniej:
	- boss (ech, te specjalne rozkazy)
	- klik (ech, te zagrania nie w swoim czasie)
	- nie tak szybko (proste do zakodzenia, ale zostawiamy)
	- pies (dokladnie jak powyzej)

Do zakodzenia:
model
 - abstract Trap
	:getTime, decreaseTime, isMovePossible, movedOn, shot
 - abstract Modifier
	:getTime, decreaseTime
 - Card
	:public final HashSet<Modifier> modifiers (rozne obiekty <=> rozne referencje)
 - Board 
 	musi trzymac prywatnie 15 hashsetow trapow i zwracac je w getTraps(int x, int y)
 - GameState
	musi trzymas HashSet<Modifier> globalne modyfikatory
modifiers
 - powyzsze modyfikatory (terror tez tu)
traps
 - powyzsze trapy

isSelectionCorrect -> rateSelection (Selection -> [0,1,2])
Selector poprawka w selectorze (rateselection i niech korzysta z modyfikalnosci list)

view
 - Informator
 	ile kart zostalo
 	przyciski:
 		Approve Selection
 		Cancel Selection
 		Next Turn
 		(kazdy mozna z zewnatrz enablowac i disablowac)
 	addMessage(String)
 		informator zawsze wyswietla 5 ostatnich
